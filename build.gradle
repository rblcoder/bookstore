plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'com.google.cloud.tools.jib' version '3.2.1'
	id "nebula.release" version "16.0.0"
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:3.1.0'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
	implementation 'org.springframework.boot:spring-boot-starter-aop:2.7.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

bootJar {
	archiveFileName = 'bookstoreapi.jar'
}

jib{
	from {
		image='openjdk:8-alpine'
	}
	to {
		image='registry.hub.docker.com/ruplah/spring-boot-book-store'
		auth {
			username = USERNAME // Defined in 'gradle.properties'.
			password = PASSWORD
		}
		container{
			ports = ["8080"]
		}
	}
}